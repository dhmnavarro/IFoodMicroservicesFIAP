// <auto-generated />
using System;
using MicroServices.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace MicroServices.Migrations
{
    [DbContext(typeof(PedidoContext))]
    partial class PedidoContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MicroServices.Model.Estabelecimento", b =>
                {
                    b.Property<int>("CodigoEstabelecimento")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Aberto")
                        .HasColumnType("bit");

                    b.Property<string>("Categoria")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cidade")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Endereco")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomeEstabelecimento")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CodigoEstabelecimento");

                    b.ToTable("Estabelecimento");
                });

            modelBuilder.Entity("MicroServices.Model.Pedido", b =>
                {
                    b.Property<int>("CodigoPedido")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Categoria")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CodigoEstabelecimento")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataSolicitacao")
                        .HasColumnType("datetime2");

                    b.Property<string>("Item")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Quantidade")
                        .HasColumnType("int");

                    b.Property<string>("Solicitante")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("ValorPedido")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("CodigoPedido");

                    b.HasIndex("CodigoEstabelecimento");

                    b.ToTable("Pedido");
                });

            modelBuilder.Entity("MicroServices.Model.StatusPedido", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CodigoPedido")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataEntrega")
                        .HasColumnType("datetime2");

                    b.Property<bool>("RetiraPedido")
                        .HasColumnType("bit");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CodigoPedido")
                        .IsUnique();

                    b.ToTable("StatusPedido");
                });

            modelBuilder.Entity("MicroServices.Model.Pedido", b =>
                {
                    b.HasOne("MicroServices.Model.Estabelecimento", "Estabelecimento")
                        .WithMany()
                        .HasForeignKey("CodigoEstabelecimento")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MicroServices.Model.StatusPedido", b =>
                {
                    b.HasOne("MicroServices.Model.Pedido", "Pedido")
                        .WithOne("StatusPedido")
                        .HasForeignKey("MicroServices.Model.StatusPedido", "CodigoPedido")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
